Index: GNUmakefile
===================================================================
--- GNUmakefile	(Revision 541)
+++ GNUmakefile	(Arbeitskopie)
@@ -17,6 +17,17 @@
 IS_MINGW = $(shell $(CXX) -dumpmachine 2>&1 | $(EGREP) -c "mingw")
 CLANG_COMPILER = $(shell $(CXX) --version 2>&1 | $(EGREP) -i -c "clang version")
 
+# Set in the environment
+ifeq ($(IS_CROSS_COMPILE),1)
+  ISX86=0
+  IS_LINUX=0
+  IS_MINGW=0
+  IS_DARWIN=0
+  IS_SUN_CC=0
+  UNAME=CrossCompile
+endif
+
+
 # Default prefix for make install
 ifeq ($(PREFIX),)
 PREFIX = /usr
@@ -36,12 +47,15 @@
 GAS219_OR_LATER = $(shell $(CXX) -xc -c /dev/null -Wa,-v -o/dev/null 2>&1 | $(EGREP) -c "GNU assembler version (2\.19|2\.[2-9]|[3-9])")
 
 ifneq ($(GCC42_OR_LATER),0)
-ifeq ($(UNAME),Darwin)
+ifeq ($(IS_DARWIN),1)
 CXXFLAGS += -arch x86_64 -arch i386
 else
+ifeq ($(IS_ANDROID),1)
+else
 CXXFLAGS += -march=native
 endif
 endif
+endif
 
 ifneq ($(INTEL_COMPILER),0)
 CXXFLAGS += -wd68 -wd186 -wd279 -wd327
@@ -86,7 +100,7 @@
 endif
 endif
 
-ifeq ($(UNAME),Darwin)
+ifeq ($(IS_DARWIN),1)
 AR = libtool
 ARFLAGS = -static -o
 CXX = c++
@@ -98,6 +112,33 @@
 endif
 endif
 
+# Begin Android cross-compile configuration.
+# See http://www.cryptopp.com/wiki/Android_(Command_Line).
+ifeq ($(IS_ANDROID),1)
+
+  # Two of these were already set, but here's the entire collection.
+  CPP=arm-linux-androideabi-cpp
+  CXX=arm-linux-androideabi-g++
+  AR=arm-linux-androideabi-ar
+  RANLIB=arm-linux-androideabi-ranlib
+  LD=arm-linux-androideabi-ld
+
+  # ARMv7/ARMv7a/Neon has a few rules, so please visit
+  # https://android.googlesource.com/platform/ndk/+/ics-mr0/docs/STANDALONE-TOOLCHAIN.html
+  # armeabi-v7a must use:
+  #   CXXFLAGS += -march=armv7-a -mfloat-abi=softfp
+  # armeabi-v7a with Neon must use:
+  #   CXXFLAGS += -march=armv7-a -mfloat-abi=softfp -mfpu=neon
+  # ARMv7 needs nothing special. In fact, specifying
+  #   CXXFLAGS += -march=armv7 will result in a compile error.
+  # Cortex A8 requires a bug fix:
+  #   LDFLAGS += --fix-cortex-a8
+
+  # CXX=arm-linux-androideabi-g++ (and friends) was set in setenv-android.sh
+  CXXFLAGS += -fPIC -DCRYPTOPP_DISABLE_ASM=1 -lstlport_shared -I$(ANDROID_STL_INC)
+  LDLIBS += $(ANDROID_STL_LIB)
+endif
+
 ifeq ($(UNAME),SunOS)
 LDLIBS += -lnsl -lsocket
 M32OR64 = -m$(shell isainfo -b)
@@ -165,7 +206,7 @@
 	$(RANLIB) $@
 
 libcryptopp.so: $(LIBOBJS)
-	$(CXX) -shared -o $@ $(LIBOBJS)
+	$(CXX) $(CXXFLAGS) -shared -o $@ $(LDFLAGS) $(LIBOBJS)
 
 cryptest.exe: libcryptopp.a $(TESTOBJS)
 	$(CXX) -o $@ $(CXXFLAGS) $(TESTOBJS) ./libcryptopp.a $(LDFLAGS) $(LDLIBS)
Index: network.h
===================================================================
--- network.h	(Revision 541)
+++ network.h	(Arbeitskopie)
@@ -10,6 +10,10 @@
 
 #include <deque>
 
+#if defined(__ANDROID__)
+# include <sys/select.h>
+#endif
+
 NAMESPACE_BEGIN(CryptoPP)
 
 class LimitedBandwidth
Index: wait.cpp
===================================================================
--- wait.cpp	(Revision 541)
+++ wait.cpp	(Arbeitskopie)
@@ -363,7 +363,7 @@
 	else if (result == 0)
 		return timeoutIsScheduledEvent;
 	else
-		throw Err("WaitObjectContainer: select failed with error " + errno);
+		throw Err("WaitObjectContainer: select failed with error " + IntToString(errno));
 }
 
 #endif
Index: wait.h
===================================================================
--- wait.h	(Revision 541)
+++ wait.h	(Arbeitskopie)
@@ -17,6 +17,10 @@
 
 #include "hrtimer.h"
 
+#if defined(__ANDROID__)
+# include <sys/select.h>
+#endif
+
 NAMESPACE_BEGIN(CryptoPP)
 
 class Tracer
